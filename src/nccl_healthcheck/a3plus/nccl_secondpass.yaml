# yamllint disable
apiVersion: v1
kind: Service
metadata:
  name: nccl-secondpass-svc-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
spec:
  clusterIP: None  #  clusterIP must be None to create a headless service
  selector:
    nccl-secondpass-id: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}-0
  labels:
    nccl-secondpass-id: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      labels:
        nccl-secondpass-id: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
    spec:
      tolerations:
      - operator: "Exists"
      serviceAccountName: nccl-node-list-${SHORT_GUID}-${ORIG_CHECK_TIME_EPOCH_SEC}
      hostname: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}-0
      subdomain: nccl-secondpass-svc-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}  # has to match Service name
      restartPolicy: Never
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - name: nvidia-install-dir-host
        hostPath:
          path: /home/kubernetes/bin/nvidia/lib64
      - name: tcpd-socket
        hostPath:
          path: /run/tcpxo
      - name: tcpx-nccl-plugin-volume
        emptyDir: {}
      - name: workload-terminated-volume
        emptyDir: {}
      nodeSelector:
        node.kubernetes.io/instance-type: a3-megagpu-8g
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            # Multiple matchExpressions ORed between each other. Statements whithin matchExpressions ANDed.
            - matchExpressions:
              - key: cloud.google.com/gke-accelerator
                operator: Exists
                # Schedule specifically on a node that needs a second pass
              - key: aiinfra/nccl-healthcheck-second-pass-needed
                operator: Exists
              - key: aiinfra/node-not-ready
                operator: DoesNotExist
              # If aiinfra/nccl-healthcheck-test label is true then it will trigger
              - key: aiinfra/nccl-healthcheck-test
                operator: In
                values:
                - "true"
      containers:
      - name: tcpxo-daemon
        image: us-docker.pkg.dev/gce-ai-infra/gpudirect-tcpxo/tcpgpudmarxd-dev:v1.0.8
        imagePullPolicy: Always
        command:
        - "bash"
        - "-c"
        - |
          set -ex
          chmod 755 /fts/entrypoint_rxdm_container.sh
          /fts/entrypoint_rxdm_container.sh --num_hops=2 --num_nics=8  --uid= --alsologtostderr &
          while [ ! -e "/usr/share/nemo/workload_terminated" ]; do echo "waiting for exit signal..."; sleep 10; done
          pkill -e "^"tcpgpudmarxd || true
          sleep 30
        securityContext:
          privileged: true
        volumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia/lib64
        - name: tcpd-socket
          mountPath: /tmp
        - name: workload-terminated-volume
          mountPath: /usr/share/nemo
        env:
        - name: LD_LIBRARY_PATH
          value: /usr/local/nvidia/lib64
      - name: nccl-healthcheck
        image: us-docker.pkg.dev/gce-ai-infra/health-check/nccl-healthcheck:${IMAGE_TAG}
        imagePullPolicy: Always
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_PTRACE
            - IPC_LOCK
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        # Hack this by removing the index to support both first and second pass
        - name: JOB_NAME
          value: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
        - name: SERVICE_NAME
          value: nccl-secondpass-svc-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
        - name: LD_LIBRARY_PATH
          value: /usr/local/tcpxo/lib64:/usr/local/nvidia/lib64/
        - name: NCCL_LIB_DIR
          value: /usr/local/nvidia/lib64
        - name: NHOSTS
          value: "2"
        - name: nr
          value: "8"
        - name: BANDWIDTH_THRESHOLD
          value: "90"
        - name: START_MESSAGE_SIZE
          value: "2G"
        - name: END_MESSAGE_SIZE
          value: "8G"
        - name: HEALTH_VALIDITY_HOURS
          value: "24"
        - name: USE_TCPX
          value: "true"
        - name: USE_FASTRAK
          value: "true"
        - name: DRY_RUN
          value: "${DRY_RUN}"
        - name: SECOND_PASS
          value: "true"
        - name: JOB_COMPLETION_INDEX
          value: "0"
        - name: ENABLE_TWO_PASS_STRATEGY
          value: "true"
        - name: INSTANCE_TYPE
          value: "a3-megagpu-8g"
        - name: IMAGE_TAG
          value: "${IMAGE_TAG}"
        - name: NCCL_FASTRAK_USE_SNAP
          value: "1"
        - name: NCCL_FASTRAK_ENABLE_CONTROL_CHANNEL
          value: "0"
        - name: NCCL_FASTRAK_NUM_FLOWS
          value: "2"
        volumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia/lib64
        - name: tcpx-nccl-plugin-volume
          mountPath: /usr/local/tcpx
        - name: tcpd-socket
          mountPath: /tmp
        - name: workload-terminated-volume
          mountPath: /usr/share/nemo
        resources:
          limits:
            nvidia.com/gpu: !!int 8
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}-1
  labels:
    nccl-secondpass-id: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
spec:
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      labels:
        nccl-secondpass-id: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
    spec:
      tolerations:
      - operator: "Exists"
      serviceAccountName: nccl-node-list-${SHORT_GUID}-${ORIG_CHECK_TIME_EPOCH_SEC}
      hostname: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}-1
      subdomain: nccl-secondpass-svc-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}  # has to match Service name
      restartPolicy: Never
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - name: nvidia-install-dir-host
        hostPath:
          path: /home/kubernetes/bin/nvidia/lib64
      - name: tcpd-socket
        hostPath:
          path: /run/tcpxo
      - name: tcpx-nccl-plugin-volume
        emptyDir: {}
      - name: workload-terminated-volume
        emptyDir: {}
      nodeSelector:
        node.kubernetes.io/instance-type: a3-megagpu-8g
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            # Multiple matchExpressions ORed between each other. Statements whithin matchExpressions ANDed.
            # This job targets a node that is already marked as Healthy
            - matchExpressions:
              - key: cloud.google.com/gke-accelerator
                operator: Exists
              - key: aiinfra/nccl-healthcheck-valid-till-sec
                operator: Gt
                values:
                - "${CHECK_TIME_EPOCH_SEC}"
      initContainers:
      - name: nccl-plugin-installer
        image: us-docker.pkg.dev/gce-ai-infra/gpudirect-tcpxo/nccl-plugin-gpudirecttcpx-dev:v1.0.2
        imagePullPolicy: Always
        volumeMounts:
        - name: tcpxo-nccl-plugin-volume
          mountPath: /var/lib/tcpxo
        resources:
          requests:
            cpu: 150m
        command:
          - /bin/sh
          - -c
          - |
            /scripts/container_entry.sh install --install-nccl
      containers:
      - name: tcpxo-daemon
        image: us-docker.pkg.dev/gce-ai-infra/gpudirect-tcpxo/tcpgpudmarxd-dev:v1.0.8
        imagePullPolicy: Always
        command:
        - "bash"
        - "-c"
        - |
          set -ex
          chmod 755 /fts/entrypoint_rxdm_container.sh
          /fts/entrypoint_rxdm_container.sh --num_hops=2 --num_nics=8  --uid= --alsologtostderr &
          while [ ! -e "/usr/share/nemo/workload_terminated" ]; do echo "waiting for exit signal..."; sleep 10; done
          pkill -e "^"tcpgpudmarxd || true
          sleep 30
        securityContext:
          privileged: true
        volumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia/lib64
        - name: tcpd-socket
          mountPath: /tmp
        - name: workload-terminated-volume
          mountPath: /usr/share/nemo
        env:
        - name: LD_LIBRARY_PATH
          value: /usr/local/nvidia/lib64
      - name: nccl-healthcheck
        image: us-docker.pkg.dev/gce-ai-infra/health-check/nccl-healthcheck:${IMAGE_TAG}
        imagePullPolicy: Always
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_PTRACE
            - IPC_LOCK
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        # Hack this by removing the index to support both first and second pass
        - name: JOB_NAME
          value: nccl-secondpass-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
        - name: SERVICE_NAME
          value: nccl-secondpass-svc-${SHORT_GUID}-${CHECK_TIME_EPOCH_SEC}
        - name: LD_LIBRARY_PATH
          value: /usr/local/tcpxo/lib64:/usr/local/nvidia/lib64/
        - name: NCCL_LIB_DIR
          value: /usr/local/nvidia/lib64
        - name: NHOSTS
          value: "2"
        - name: nr
          value: "8"
        - name: BANDWIDTH_THRESHOLD
          value: "90"
        - name: START_MESSAGE_SIZE
          value: "2G"
        - name: END_MESSAGE_SIZE
          value: "8G"
        - name: HEALTH_VALIDITY_HOURS
          value: "24"
        - name: USE_TCPX
          value: "true"
        - name: USE_FASTRAK
          value: "true"
        - name: DRY_RUN
          value: "${DRY_RUN}"
        - name: SECOND_PASS
          value: "true"
        - name: JOB_COMPLETION_INDEX
          value: "1"
        - name: ENABLE_TWO_PASS_STRATEGY
          value: "true"
        - name: INSTANCE_TYPE
          value: "a3-megagpu-8g"
        - name: IMAGE_TAG
          value: "${IMAGE_TAG}"
        - name: NCCL_FASTRAK_USE_SNAP
          value: "1"
        - name: NCCL_FASTRAK_ENABLE_CONTROL_CHANNEL
          value: "0"
        - name: NCCL_FASTRAK_NUM_FLOWS
          value: "2"
        - name: ITERATIONS
          value: "${ITERATIONS}"
        volumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia/lib64
        - name: tcpx-nccl-plugin-volume
          mountPath: /usr/local/tcpx
        - name: tcpd-socket
          mountPath: /tmp
        - name: workload-terminated-volume
          mountPath: /usr/share/nemo
        resources:
          limits:
            nvidia.com/gpu: !!int 8