steps:
# ================================ DOCKER CONTAINER BUILDS ==============================================================
- name: 'gcr.io/cloud-builders/docker'
  # TODO: we don't necessarily need to build this every time, it will barely ever change
  id: 'cicd_tests_build'
  args: ['build', '-t', "us-docker.pkg.dev/gce-ai-infra/health-check/cicd_tests:$SHORT_SHA",
    "-f", "docker/cicd_tests.Dockerfile", '.']
  waitFor: ['-']
- name: 'gcr.io/cloud-builders/docker'
  id: 'health_runner_build'
  args: ['build', '-t', "us-docker.pkg.dev/gce-ai-infra/health-check/health_runner_dummy:$SHORT_SHA",
    "-f", "docker/health_runner.Dockerfile", '.']
  waitFor: ['-']  # Technically redundant, as this is the first step.
- name: 'gcr.io/cloud-builders/docker'
  id: 'gpu_healthcheck_build'
  args: ['build', '-t', "us-docker.pkg.dev/gce-ai-infra/health-check/gpu_healthcheck_dummy:$SHORT_SHA",
    "-f", "docker/gpu_healthcheck.Dockerfile", '.']
  waitFor: ['-']  # Specifying a list of nothing to wait for makes these all run in parallel
- name: 'gcr.io/cloud-builders/docker'
  id: 'nccl_healthcheck_build'
  args: ['build', '-t', "us-docker.pkg.dev/gce-ai-infra/health-check/nccl_healthcheck_dummy:$SHORT_SHA",
    "-f", "docker/nccl_healthcheck.Dockerfile", '.']
  waitFor: ['-']
- name: 'gcr.io/cloud-builders/docker'
  id: 'neper_healthcheck_build'
  args: ['build', '-t', "us-docker.pkg.dev/gce-ai-infra/health-check/neper_healthcheck_dummy:$SHORT_SHA",
    "-f", "docker/neper_healthcheck.Dockerfile", '.']
  waitFor: ['-']
# NOTE: all subsequent steps will be run sequentially & only start after all of the images are built
# ================================== NCCL Healthcheck Tests ===========================================================
- name: 'gcr.io/$PROJECT_ID/helm'  # community image, built manually from instructions at https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master
  id: 'nccl_healthcheck_uninstall'
  entrypoint: "bash"
  args: ["./uninstall_from_cluster.sh", "healthcheck-test", "*health-runner*", "*healthcheck*"]

  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'GCLOUD_PROJECT=supercomputer-testing'
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'nccl_healthcheck_clean'
  args: ['label', 'nodes', '--all', 'aiinfra/nccl-healthcheck-test=true', 'aiinfra/nccl-healthcheck-bandwidth-',
    'aiinfra/nccl-healthcheck-result-', 'aiinfra/nccl-healthcheck-valid-till-sec-']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'CLOUDSDK_CORE_PROJECT=supercomputer-testing'
- name: 'gcr.io/$PROJECT_ID/helm'  # community image, built manually from instructions at https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master
  id: 'nccl_healthcheck_run'
  args: ['upgrade', '-i', 'healthcheck-test', 'deploy/helm/health_runner', '--set',
    'health_checks.nccl_healthcheck.env.IMAGE_TAG=$SHORT_SHA', '--set', 'health_checks.nccl_healthcheck.run_check=true',
    '--set', 'health_checks.nccl_healthcheck.DRY_RUN="false"', '--set', 'health_checks.nccl_healthcheck.blast_mode.blast_mode_enabled=true']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'GCLOUD_PROJECT=supercomputer-testing'
- name: "us-docker.pkg.dev/gce-ai-infra/health-check/cicd_tests:$SHORT_SHA"
  id: 'nccl_healthcheck_check'
  args: ['--check', 'aiinfra/nccl-healthcheck-bandwidth=^\d*$', 'aiinfra/nccl-healthcheck-result=^pass$',
    'aiinfra/nccl-healthcheck-valid-till-sec=^\d*$']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'CLOUDSDK_CORE_PROJECT=supercomputer-testing'
# ================================== Neper Healthcheck Tests ===========================================================
- name: 'gcr.io/$PROJECT_ID/helm'  # community image, built manually from instructions at https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master
  id: 'neper_healthcheck_uninstall'
  entrypoint: "bash"
  args: ["./uninstall_from_cluster.sh", "healthcheck-test", "*health-runner*", "*healthcheck*"]
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'GCLOUD_PROJECT=supercomputer-testing'
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'neper_healthcheck_clean'
  args: ['label', 'nodes', '--all', 'aiinfra/neper-healthcheck-test=true', 'aiinfra/neper-healthcheck-result-',
    'aiinfra/neper-healthcheck-valid-till-sec-']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'CLOUDSDK_CORE_PROJECT=supercomputer-testing'
- name: 'gcr.io/$PROJECT_ID/helm'  # community image, built manually from instructions at https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master
  id: 'neper_healthcheck_run'
  args: ['upgrade', '-i', 'healthcheck-test', 'deploy/helm/health_runner', '--set',
    'health_checks.neper_healthcheck.env.IMAGE_TAG=$SHORT_SHA', '--set', 'health_checks.neper_healthcheck.run_check=true',
    '--set', 'health_checks.neper_healthcheck.DRY_RUN="false"', '--set', 'health_checks.neper_healthcheck.blast_mode.blast_mode_enabled=true']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'GCLOUD_PROJECT=supercomputer-testing'
- name: "us-docker.pkg.dev/gce-ai-infra/health-check/cicd_tests:$SHORT_SHA"
  id: 'neper_healthcheck_check'
  args: ['--check', 'aiinfra/neper-healthcheck-result=^pass$', 'aiinfra/neper-healthcheck-valid-till-sec=^\d*$']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'CLOUDSDK_CORE_PROJECT=supercomputer-testing'
# ================================== GPU Healthcheck Tests ===========================================================
- name: 'gcr.io/$PROJECT_ID/helm'  # community image, built manually from instructions at https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master
  id: 'gpu_healthcheck_uninstall'
  entrypoint: "bash"
  args: ["./uninstall_from_cluster.sh", "healthcheck-test", "*health-runner*", "*healthcheck*"]
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'GCLOUD_PROJECT=supercomputer-testing'
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'gpu_healthcheck_clean'
  args: ['label', 'nodes', '--all', 'aiinfra/gpu-healthcheck-test=true', 'aiinfra/gpu-healthcheck-result-',
    'aiinfra/gpu-healthcheck-valid-till-sec-']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'CLOUDSDK_CORE_PROJECT=supercomputer-testing'
- name: 'gcr.io/$PROJECT_ID/helm'  # community image, built manually from instructions at https://github.com/GoogleCloudPlatform/cloud-builders-community/tree/master
  id: 'gpu_healthcheck_run'
  args: ['upgrade', '-i', 'healthcheck-test', 'deploy/helm/health_runner', '--set',
    'health_checks.gpu_healthcheck.env.IMAGE_TAG=$SHORT_SHA', '--set', 'health_checks.gpu_healthcheck.run_check=true',
    '--set', 'health_checks.gpu_healthcheck.DRY_RUN="false"', '--set', 'health_checks.gpu_healthcheck.blast_mode.blast_mode_enabled=true']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'GCLOUD_PROJECT=supercomputer-testing'
- name: "us-docker.pkg.dev/gce-ai-infra/health-check/cicd_tests:$SHORT_SHA"
  id: 'gpu_healthcheck_check'
  args: ['--check', 'aiinfra/gpu-healthcheck-result=^pass$', 'aiinfra/gpu-healthcheck-valid-till-sec=^\d*$',
    '--filter', 'node.kubernetes.io/instance-type=a3-megagpu']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=a3plus-bnd-temp'  # TODO: read these from secrets
  - 'CLOUDSDK_CORE_PROJECT=supercomputer-testing'
images:  # these images will be uploaded to cloud build
- "us-docker.pkg.dev/gce-ai-infra/health-check/cicd_tests:$SHORT_SHA"
- "us-docker.pkg.dev/gce-ai-infra/health-check/health_runner_dummy:$SHORT_SHA"
- "us-docker.pkg.dev/gce-ai-infra/health-check/gpu_healthcheck_dummy:$SHORT_SHA"
- "us-docker.pkg.dev/gce-ai-infra/health-check/nccl_healthcheck_dummy:$SHORT_SHA"
- "us-docker.pkg.dev/gce-ai-infra/health-check/neper_healthcheck_dummy:$SHORT_SHA"
# gcloud builds submit --project=gce-ai-infra --region=us-central1 --substitutions=SHORT_SHA=testimagesavingtime1
# NOTE: to get helm to be able to create healthchecks in gce-ai-infra, the following permissions needed to be added to the
# gce-ai-infra cloudbuild service account (in supercomputer-testing's IAM
# kubectl create clusterrolebinding gce-ai-infra-cluster-admin-binding --clusterrole=cluster-admin --user=510080789794@cloudbuild.gserviceaccount.com
# https://stackoverflow.com/questions/49844783/cannot-create-cluster-role-in-gke-even-though-i-am-owner-and-admin

